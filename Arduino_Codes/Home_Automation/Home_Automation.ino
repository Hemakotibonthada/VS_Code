/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/a04489ad-b607-4175-affa-d73bed5b2b48 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String msg;
  CloudSwitch switch_1;
  CloudSwitch switch_2;
  CloudSwitch switch_3;
  CloudSwitch switch_4;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
const int relay_1=13;
const int relay_2=12;
const int relay_3=14;
const int relay_4=27;
const int relay_5=26;
const int relay_6=25;
const int Drip_sensor_1=33;
const int Mq_sensor_1=32;
const int sensor_3=35;
const int sensor_4=34;
const int relay_7=23;
const int relay_8=22;
const int relay_9=21;
const int relay_10=19;
const int relay_11=18;
const int relay_12=5;
const int relay_13=4;
const int relay_14=2;
const int relay_15=15;
int Threshold_for_Mq2= 300;
String msgValue;
void Drip();
void MQ2();
void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  pinMode(relay_1,OUTPUT);
  pinMode(relay_2,OUTPUT);
  pinMode(relay_3,OUTPUT);
  pinMode(relay_4,OUTPUT);
  pinMode(relay_5,OUTPUT);
  pinMode(relay_6,OUTPUT);
  pinMode(Drip_sensor_1,INPUT);
  pinMode(Mq_sensor_1,INPUT);
  pinMode(sensor_3,INPUT);
  pinMode(sensor_4,INPUT);
  pinMode(relay_7,OUTPUT);
  pinMode(relay_8,OUTPUT);
  pinMode(relay_9,OUTPUT);
  pinMode(relay_10,OUTPUT);
  pinMode(relay_11,OUTPUT);
  pinMode(relay_12,OUTPUT);
  pinMode(relay_13,OUTPUT);
  pinMode(relay_14,OUTPUT);
  pinMode(relay_15,OUTPUT);
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here
  msgValue=msg;
  // Drip();
  // MQ2();
}
void Drip(){
  if (Drip_sensor_1 < 50){
    digitalWrite(relay_1,HIGH);
  }
  else{
    digitalWrite(relay_1,LOW);
  }
}
void MQ2(){
  if (Mq_sensor_1 <100){
    digitalWrite(relay_2,HIGH);
  }
  else{
    digitalWrite(relay_2,LOW);
  }
}


/*
  Since Switch1 is READ_WRITE variable, onSwitch1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onSwitch1Change()  {
  // Add your code here to act upon Switch1 change
  if (switch_1){
    digitalWrite(relay_11,HIGH);
  }
  else{
    digitalWrite(relay_11,LOW);
  }
}

/*
  Since Switch2 is READ_WRITE variable, onSwitch2Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onSwitch2Change()  {
  // Add your code here to act upon Switch2 change
   if (switch_2){
    digitalWrite(relay_12,HIGH);
  }
  else{
    digitalWrite(relay_12,LOW);
  }
}


/*
  Since Switch3 is READ_WRITE variable, onSwitch3Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onSwitch3Change()  {
  // Add your code here to act upon Switch3 change
   if (switch_3){
    digitalWrite(relay_13,HIGH);
  }
  else{
    digitalWrite(relay_13,LOW);
  }
}

/*
  Since Switch4 is READ_WRITE variable, onSwitch4Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onSwitch4Change()  {
  // Add your code here to act upon Switch4 change
   if (switch_4){
    digitalWrite(relay_14,HIGH);
  }
  else{
    digitalWrite(relay_14,LOW);
  }
}

/*
  Since Switch5 is READ_WRITE variable, onSwitch5Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onSwitch5Change()  {
  // Add your code here to act upon Switch5 change
}


/*
  Since Msg is READ_WRITE variable, onMsgChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMsgChange()  {
  // Add your code here to act upon Msg change
    if (msg=="1_ON")
    digitalWrite(relay_1,HIGH);
  else if (msg=="1_OFF")
    digitalWrite(relay_1,LOW);
  else if (msg=="2_ON")
    digitalWrite(relay_2,HIGH);
  else if (msg=="2_OFF")
    digitalWrite(relay_2,LOW);
  else if (msg=="3_ON")
    digitalWrite(relay_3,HIGH);
  else if (msg=="3_OFF")
    digitalWrite(relay_3,LOW);
  else if (msg=="4_ON")
    digitalWrite(relay_4,HIGH);
  else if (msg=="4_OFF")
    digitalWrite(relay_4,LOW);
  else if (msg=="5_ON")
    digitalWrite(relay_5,HIGH);
  else if (msg=="5_OFF")
    digitalWrite(relay_5,LOW);
    else if (msg=="6_ON")
    digitalWrite(relay_6,HIGH);
  else if (msg=="6_OFF")
    digitalWrite(relay_6,LOW);
    else if (msg=="7_ON")
    digitalWrite(relay_7,HIGH);
  else if (msg=="7_OFF")
    digitalWrite(relay_7,LOW);
    else if (msg=="8_ON")
    digitalWrite(relay_8,HIGH);
  else if (msg=="8_OFF")
    digitalWrite(relay_8,LOW);
    else if (msg=="9_ON")
    digitalWrite(relay_9,HIGH);
  else if (msg=="9_OFF")
    digitalWrite(relay_9,LOW);
    else if (msg=="10_ON")
    digitalWrite(relay_10,HIGH);
  else if (msg=="10_OFF")
    digitalWrite(relay_10,LOW);
}